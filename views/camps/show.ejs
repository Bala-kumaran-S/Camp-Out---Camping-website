<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://js.stripe.com/v3/"></script>

<% layout('layouts/boilerplate')%>
<img src="<%= campground.imageUrl %>" alt="<%= campground.title %> image">
  <h1><%= campground.title %></h1>
  <p><%= campground.description %></p>
  <p><strong>Price:</strong> $<%= campground.price %> per night</p>
  
  <% if (campground.author === userId) { %>
    <a class="btn btn-sm btn-primary edit-review" href="<%= campground.id  %>/edit">
      Edit
    </a>
  <% } %>
  <form id="payment-form" action="/camps/<%= campground.id %>/pay" method="POST">
    <div class="form-row">
      <label for="card-element">
        Credit or debit card
      </label>
      <div id="card-element">
        <!-- A Stripe Element will be inserted here. -->
      </div>
  
      <!-- Used to display form errors. -->
      <div id="card-errors" role="alert"></div>
    </div>
  
    <button type="submit">Submit Payment</button>
  </form>
  <!-- Review Section -->
  <div class="reviews-section">
    <h2>Reviews</h2>
    <% if (campground.reviews && campground.reviews.length > 0) { %>
      <% campground.reviews.forEach((review, index) => { %>
        <div class="review-card">
          <p><strong>Rating:</strong> <%= review.rating %></p>
          <p><%= review.comment %></p>
          <% if (review.userId === userId) { %>
            <button class="btn btn-sm btn-primary edit-review" 
                    data-bs-toggle="modal" 
                    data-bs-target="#reviewModal"
                    data-review-index="<%= index %>"
                    data-rating="<%= review.rating %>"
                    data-comment="<%= review.comment %>">
              Edit
            </button>
          <% } %>
        </div>
      <% }) %>
    <% } else { %>
      <p>No reviews yet. Be the first to add one!</p>
    <% } %>
  </div>

  <!-- Review Form -->
  <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#reviewModal">
    Add Review
  </button>
  <div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="reviewModalLabel">Add Review</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="reviewForm" action="/camps/<%= campground.id %>/reviews" method="POST">
            <input type="hidden" name="userId" value="<%= userId %>">
            
            <div class="mb-3">
              <label for="rating" class="form-label">Rating:</label>
              <input type="number" class="form-control" id="rating" name="rating" min="1" max="5" required>
            </div>
  
            <div class="mb-3">
              <label for="comment" class="form-label">Comment:</label>
              <textarea class="form-control" id="comment" name="comment" rows="3" required></textarea>
            </div>
  
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Submit Review</button>
            </div>
          </form>
        </div>
      </div>
    </div>
</div>

  <!-- Payment form -->
  

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const reviewModal = document.getElementById('reviewModal');
      const reviewForm = document.getElementById('reviewForm');
      const modalTitle = document.querySelector('#reviewModalLabel');
    
      // Handle edit button clicks
      document.querySelectorAll('.edit-review').forEach(button => {
        button.addEventListener('click', function() {
          const reviewIndex = this.dataset.reviewIndex;
          const rating = this.dataset.rating;
          const comment = this.dataset.comment;
    
          modalTitle.textContent = 'Edit Review';
          reviewForm.action = `/camps/<%= campground.id %>/review/${reviewIndex}?_method=PUT`;
          document.getElementById('rating').value = rating;
          document.getElementById('comment').value = comment;
        });
      });
    
      // Reset form when modal is closed
      reviewModal.addEventListener('hidden.bs.modal', function () {
        modalTitle.textContent = 'Add Review';
        reviewForm.action = `/camps/<%= campground.id %>/review`;
        reviewForm.reset();
      });
    });

    // Create a Stripe client.
    var stripe = Stripe('pk_test_51Qe6TsLwqNi24CD9s2nb0ewIpewwMmyY1CDzLVKilphLh0f8GGu0MfhBxof2W5HvU3eSKP1TDnLwFlyg1nacuUMX006Ba0kunz'); // Replace with your Stripe public key

    // Create an instance of Elements.
    var elements = stripe.elements();
  
    // Create an instance of the card Element.
    var card = elements.create('card');
  
    // Add an instance of the card Element into the `card-element` <div>.
    card.mount('#card-element');
  
    // Handle real-time validation errors from the card Element.
    card.addEventListener('change', function(event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = '';
      }
    });
  
    // Handle form submission.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
      event.preventDefault();
  
      stripe.createToken(card).then(function(result) {
        if (result.error) {
          // Inform the user if there was an error.
          var errorElement = document.getElementById('card-errors');
          errorElement.textContent = result.error.message;
        } else {
          // Send the token to your server.
          stripeTokenHandler(result.token);
        }
      });
    });
  
    // Submit the form with the token ID.
    function stripeTokenHandler(token) {
      var form = document.getElementById('payment-form');
      var hiddenInput = document.createElement('input');
      hiddenInput.setAttribute('type', 'hidden');
      hiddenInput.setAttribute('name', 'token');
      hiddenInput.setAttribute('value', token.id);
      form.appendChild(hiddenInput);
  
      // Submit the form
      form.submit();
    }
  </script>
    
    <!-- Add CSS for styling -->
    <style>
    .review-card {
      border: 1px solid #ddd;
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 5px;
    }
    
    .modal-dialog {
      max-width: 500px;
    }

    main {
      font-family: 'Arial', sans-serif;
      background-color: #f8f9fa;
      color: #343a40;
      align-items: center;
      text-align: center;
    }

    h1, h2 {
      color: #007bff;
    }

    img {
      max-width: 100%;
      height: auto;
      border-radius: 10px;
    }

    .btn-primary {
      background-color: #007bff;
      border-color: #007bff;
    }

    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    .form-control {
      border-radius: 5px;
    }

    .modal-header {
      background-color: #007bff;
      color: white;
    }

    .modal-footer .btn-primary {
      background-color: #0056b3;
      border-color: #0056b3;
    }

    #payment-form {
      max-width: 500px;
      margin: 20px auto;
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      background-color: #fff;
    }

    #card-element {
      border: 1px solid #ddd;
      padding: 10px;
      border-radius: 5px;
    }

    #card-errors {
      color: #dc3545;
      margin-top: 10px;
    }
    .modal-content {
      padding: 20px;
    }
    .card {
      margin-bottom: 20px;
    }

    .card img {
      border-top-left-radius: calc(0.25rem - 1px);
      border-top-right-radius: calc(0.25rem - 1px);
    }

    .card-body {
      padding: 15px;
    }

    .card-title {
      font-size: 1.25rem;
      margin-bottom: 10px;
    }

    .card-text {
      margin-bottom: 10px;
    }

    .card-footer {
      background-color: #f8f9fa;
      border-top: 1px solid #ddd;
      padding: 10px;
      text-align: right;
    }
    </style>
